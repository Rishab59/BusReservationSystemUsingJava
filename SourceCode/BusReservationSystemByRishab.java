//import java.util.Scanner ;
//import java.util.ArrayList ;
import java.util.* ;
import java.text.ParseException;
import java.text.SimpleDateFormat ;

class Bus 
{
	private int busNo ;
	private boolean ac ;
	private int capacity ;
	
	Bus(int no, boolean ac, int cap)
	{
		this.busNo = no ;
		this.ac = ac ;
		this.capacity = cap ;
	}
	
	public int getBusNo() // getting bus number info (accessor method)
	{
		return busNo ;
	}
	
	// cannot change the bus number so setBusNo() method is not defined. 
	
	public boolean getAc() // getting bus AC info (accessor method)
	{
		return ac ;
	}
	
	public void setAC(boolean value) // manipulating the bus AC info (mutator method)
	{
		ac = value ;
	}
	public int getCapacity() // getting bus capacity info (accessor method)
	{
		return capacity ;
	}
	
	public void setCapacity(int cap) // manipulating the bus capacity info (mutator method)
	{
		capacity = cap ;
	}
	
	public void displayBusInfo()
	{
		System.out.println("Bus No :\t" + busNo + "\nAC :\t" + ac + "\nTotal Capacity :\t" + capacity) ;
	}
}

class Booking 
{
	String passengerName ;
	int busNo ;
	Date date ;
	
	Scanner sc = new Scanner(System.in) ;
	
	Booking()
	{
		System.out.print("Enter name of the passenger :\t") ;
		passengerName = sc.next() ;
		
		System.out.print("\nEnter Bus Number :\t") ;
		busNo = sc.nextInt() ;
		
		System.out.print("\nEnter the Date of journey in dd-mm-yyyy format :\t") ;
		String dateInput = sc.next();
		// converting the date in string to actual date format using in-built SimpleDateFormat class in java
		SimpleDateFormat dateFormat = new SimpleDateFormat ("dd-MM-yyyy") ; // MM because mm is for minute in java
		try 
		{
			date = dateFormat.parse(dateInput) ;
		} 
		catch (ParseException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace() ;
		}
		// the above try...catch block is auto generated by ellipse
	}
	
	public boolean isAvailable(ArrayList<Booking> bookings, ArrayList<Bus> buses)
	{
		int capacity = 0 ;
		for(Bus bus : buses)
		{
			if(bus.getBusNo() == busNo)
			{
				capacity = bus.getCapacity() ;
			}
		}
		
		int booked = 0 ;
		for(Booking booking : bookings)
		{
			if((booking.busNo == busNo) && (booking.date.equals(date)))
			{
				booked++ ;
			}
		}
		
		if(booked < capacity)
		{
			return true ;
		}
		else
		{
			return false ;
		}
	}
}

public class BusReservationSystemByRishab
{
	public static void main(String [] array) 
	{
		System.out.println("Bus Reservation System") ;
		
		ArrayList<Bus> buses = new ArrayList<Bus>() ; // this is for 'Bus' class
		ArrayList<Booking> bookings = new ArrayList<Booking>() ; //this is for 'Booking' class
		
		buses.add(new Bus(1, true, 45)) ; //Testing value capacity = 2
		buses.add(new Bus(2, false, 50)) ;
		buses.add(new Bus(3, true, 48)) ;
		// 3 buses are present in this code (can also extend)
		
		int userChoice = 1 ;
		Scanner sc = new Scanner(System.in) ;
		
		for(Bus b : buses)
		{
			b.displayBusInfo() ;
		}
		
		while (userChoice == 1)
		{
			System.out.print("\n1 to Book\n2 to Exit\nEnter your choice :\t") ;
			userChoice = sc.nextInt() ;
			
			if(userChoice == 1)
			{
				System.out.println("\nBooking Process") ;
				Booking booking = new Booking() ;
				if(booking.isAvailable(bookings, buses))
				{
					bookings.add(booking) ;
					System.out.print("Your Booking is Confirmed") ;
				}
				else
				{
					System.out.print("Sorry, Bus is full\nTry another Bus or Date") ;
				}
			}
			else if(userChoice == 2)
			{
				System.out.print("\nThank You !!!") ;
			}
			else
			{
				System.out.print("Invalid Choice") ;
			}
		}
	}
}
